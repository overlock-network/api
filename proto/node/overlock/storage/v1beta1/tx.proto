syntax = "proto3";

package overlock.storage.v1beta1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/web-seven/overlock-api/go/node/overlock/storage/v1beta1";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc CreateRegistry(MsgCreateRegistry) returns (MsgCreateRegistryResponse);
  rpc UpdateRegistry(MsgUpdateRegistry) returns (MsgUpdateRegistryResponse);
  rpc DeleteRegistry(MsgDeleteRegistry) returns (MsgDeleteRegistryResponse);
}

message MsgCreateRegistry {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string name = 2;
  string provider = 3;
}

message MsgCreateRegistryResponse {
  uint64 id = 1;
}

message MsgUpdateRegistry {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string name = 2;
  string provider = 3;
  uint64 id = 4;
}

message MsgUpdateRegistryResponse {}

message MsgDeleteRegistry {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteRegistryResponse {}
