syntax = "proto3";

package overlock.storage.v1beta1;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "overlock/storage/v1beta1/registry.proto";

option go_package = "github.com/overlock-network/api/go/node/overlock/storage/v1beta1";

// Query defines the gRPC querier service.
service Query {
  // Queries a list of ShowRegistry items.
  rpc ShowRegistry(QueryShowRegistryRequest) returns (QueryShowRegistryResponse) {
    option (google.api.http).get = "/overlock/storage/show_registry/{id}";
  }

  // Queries a list of ListRegistry items.
  rpc ListRegistry(QueryListRegistryRequest) returns (QueryListRegistryResponse) {
    option (google.api.http).get = "/overlock/storage/list_registry";
  }
}

message QueryShowRegistryRequest {
  uint64 id = 1;
}

message QueryShowRegistryResponse {
  Registry registry = 1 [(gogoproto.nullable) = false];
}

message QueryListRegistryRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListRegistryResponse {
  repeated Registry registry = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
