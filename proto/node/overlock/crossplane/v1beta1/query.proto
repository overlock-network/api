syntax = "proto3";

package overlock.crossplane.v1beta1;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "overlock/crossplane/v1beta1/configuration.proto";
import "overlock/crossplane/v1beta1/environment.proto";

option go_package = "github.com/web-seven/overlock-api/go/node/overlock/crossplane/v1beta1";

// Query defines the gRPC querier service.
service Query {
  // Queries a list of ShowConfiguration items.
  rpc ShowConfiguration(QueryShowConfigurationRequest) returns (QueryShowConfigurationResponse) {
    option (google.api.http).get = "/overlock/crossplane/show_configuration/{id}";
  }

  // Queries a list of ListConfiguration items.
  rpc ListConfiguration(QueryListConfigurationRequest) returns (QueryListConfigurationResponse) {
    option (google.api.http).get = "/overlock/crossplane/list_configuration";
  }

  // Queries a list of ShowEnvironment items.
  rpc ShowEnvironment(QueryShowEnvironmentRequest) returns (QueryShowEnvironmentResponse) {
    option (google.api.http).get = "/overlock/crossplane/show_environment/{id}";
  }

  // Queries a list of ListEnvironment items.
  rpc ListEnvironment(QueryListEnvironmentRequest) returns (QueryListEnvironmentResponse) {
    option (google.api.http).get = "/overlock/crossplane/list_environment";
  }
}

// QueryShowConfigurationRequest
message QueryShowConfigurationRequest {
  uint64 id = 1;
}

// QueryShowConfigurationResponse
message QueryShowConfigurationResponse {
  Configuration configuration = 1 [(gogoproto.nullable) = false];
}

// QueryListConfigurationRequest
message QueryListConfigurationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  string creator = 2;
}

// QueryListConfigurationResponse
message QueryListConfigurationResponse {
  repeated Configuration configurations = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryShowEnvironmentRequest
message QueryShowEnvironmentRequest {
  uint64 id = 1;
}

// QueryShowEnvironmentResponse
message QueryShowEnvironmentResponse {
  Environment environment = 1;
}

// QueryListEnvironmentRequest
message QueryListEnvironmentRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  string creator = 2;
}

// QueryListEnvironmentResponse
message QueryListEnvironmentResponse {
  repeated Environment environments = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
